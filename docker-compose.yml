version: "3.9"

services:
  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 55
      POSTGRES_DB: microservice
    volumes:
      - data-postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always
    networks:
      - spring

  config-server:
    container_name: config-server
    build:
      context: ./config-server
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    networks:
      - spring
    depends_on:
      - postgres
    restart: always

  eureka-server:
    container_name: eureka-server
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    hostname: eureka-server
    ports:
      - "8761:8761"
    networks:
      - spring
    depends_on:
      - config-server
    restart: always

  gateway-services:
    container_name: gateway-services
    build:
      context: ./gateway
      dockerfile: Dockerfile
    hostname: gateway-services
    ports:
      - "8080:8080"
    networks:
      - spring
    depends_on:
      - config-server
      - eureka-server
    restart: always

  user-services:
    container_name: user-services
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    networks:
      - spring
    depends_on:
      - gateway-services
    restart: always

  auth-services:
    container_name: auth-services
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    ports:
      - "8005:8005"
    networks:
      - spring
    depends_on:
      - gateway-services
    restart: always

volumes:
  data-postgres:

networks:
  spring:
    name: spring
